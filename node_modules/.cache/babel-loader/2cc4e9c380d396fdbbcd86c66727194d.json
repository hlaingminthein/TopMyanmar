{"ast":null,"code":"/**\n * @param {Date} [date] an optional date to convert to RFC2822 format\n * @param {boolean} [useUtc=false] whether to parse the date as UTC (default: false)\n * @returns {string} the converted date\n */\nfunction getRFC2822Date(date = new Date(), useUtc = false) {\n  if (useUtc) {\n    return getRFC2822DateUTC(date);\n  }\n\n  const dates = date.toString().replace('GMT', '').replace(/\\s\\(.*\\)$/, '').split(' ');\n  dates[0] = dates[0] + ',';\n  const day = dates[1];\n  dates[1] = dates[2];\n  dates[2] = day;\n  return dates.join(' ');\n}\n/**\n * @param {Date} [date] an optional date to convert to RFC2822 format (UTC)\n * @returns {string} the converted date\n */\n\n\nfunction getRFC2822DateUTC(date = new Date()) {\n  const dates = date.toUTCString().split(' ');\n  dates.pop(); // remove timezone\n\n  dates.push('+0000');\n  return dates.join(' ');\n}\n\nexports.getRFC2822Date = getRFC2822Date;\nexports.getRFC2822DateUTC = getRFC2822DateUTC;","map":null,"metadata":{},"sourceType":"script"}